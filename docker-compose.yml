### @source: https://github.com/apache/superset/blob/master/docker-compose-non-dev.yml

x-superset-volumes:
  &superset-volumes
  - persistence_superset:/app/superset_home
  - ./docker:/app/docker

x-superset-envs:
  &superset-envs
    SUPERSET_ENV: production
    SUPERSET_LOAD_EXAMPLES: "no"
    SUPER_SECRET_KEY: ${SUPERSET_SECRET_KEY} # Use Docker secrets in production
    SUPERSET_PORT: 8088
    REDIS_HOST: "redis"
    REDIS_PORT: "6379"
    CELERY_BROKER_URL: "redis://redis:6379/1"
    CELERY_RESULT_BACKEND: "redis://redis:6379/2"
    DATABASE_PORT: 5432
    DATABASE_DIALECT: postgresql
    DATABASE_HOST: db
    POSTGRES_DB: superset
    POSTGRES_USER: superset
    POSTGRES_PASSWORD: superset

services:
  superset:
    image: apache/superset:latest
    container_name: superset
    networks:
      - superset-net
    environment: *superset-envs
    env_file:
      - path: ./.env # default
        required: true
    ports:
      - "8088:8088"
    volumes: *superset-volumes
    restart: unless-stopped
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8088/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  celery_beat:
    image: apache/superset:latest
    container_name: superset_celery_beat
    command: celery --app=superset.tasks.celery_app:app beat -l INFO
    networks:
      - superset-net
    environment: *superset-envs
    env_file:
      - path: ./.env 
        required: true
    volumes: *superset-volumes
    depends_on:
      - redis
    healthcheck:
      disable: true

  celery_worker:
    image: apache/superset:latest
    container_name: superset_celery_worker
    command: celery --app=superset.tasks.celery_app:app worker -O fair -l INFO --concurrency=${CELERYD_CONCURRENCY:-2}
    networks:
      - superset-net
    environment: *superset-envs
    env_file:
      - path: ./.env 
        required: true
    volumes: *superset-volumes
    depends_on:
      - redis
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
        ]

  redis:
    image: redis:alpine
    container_name: superset-redis
    networks:
      - superset-net
    restart: unless-stopped
    volumes:
      - superset_redis_data:/data

  db:
    image: postgres:16-alpine
    container_name: superset-db
    restart: unless-stopped
    networks:
      - superset-net
    environment:
      POSTGRES_DB: superset
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset
      PGDATA: /var/lib/postgresql/data
    volumes:
      - /opt/databases/prod/superset/postgresql/data:/var/lib/postgresql/data

volumes:
  superset_redis_data:
  persistence_superset:

networks:
  superset-net:
    driver: bridge
